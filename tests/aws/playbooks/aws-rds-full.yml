- name: Test RDS cluster creation
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars.yml

  vars:
    instance_param_group_name: rollback-instance-group-name
    cluster_param_group_name: rollback-cluster-param-group
    cluster_name: rollback-rds-cluster
    cluster_snapshot_name: rollback-cluster-snapshot
    option_group_name: rollback-option-group-name
    password: password
    username: admin
    engine: aurora-mysql
    engine_version: "8.0.mysql_aurora.3.08.2"
    major_engine_version: "8.0"

  tasks:
    - name: Add an instance param group
      amazon.aws.rds_instance_param_group:
        state: present
        name: "{{ instance_param_group_name }}"
        description: 'My Fancy Ex Parrot Group'
        engine: "{{ engine }}{{ major_engine_version }}"
#        params:
#          auto_increment_increment: "42K"
        region: "{{ region }}"

    - name: Add a parameter group
      amazon.aws.rds_cluster_param_group:
        state: present
        name: "{{ cluster_param_group_name }}"
        description: 'Rollback param group'
        region: "{{ region }}"
        db_parameter_group_family: 'mysql8.0'

    - name: Create an RDS Mysql option group
      amazon.aws.rds_option_group:
        state: present
        region: "{{ region }}"
        option_group_name: "{{ option_group_name }}"
        engine_name: "mysql"
        major_engine_version: "{{ major_engine_version }}"
        option_group_description: rollback mysql option group
        apply_immediately: true
#        options:
#          - option_name: MEMCACHED
#            port: 11211
#            vpc_security_group_memberships:
#              - "sg-d188c123"
#            option_settings:
#              - name: MAX_SIMULTANEOUS_CONNECTIONS
#                value: "20"
#              - name: CHUNK_SIZE_GROWTH_FACTOR
#                value: "1.25"

    - name: Create minimal Aurora cluster in default VPC and default subnet group
      amazon.aws.rds_cluster:
        cluster_name: "{{ cluster_name }}"
        engine: "{{ engine }}"
        engine_version: "{{ engine_version }}"
        deletion_protection: true
        password: "{{ password }}"
        username: "{{ username }}"
        region: "{{ region }}"
      #no_log: true

    - name: Create a DB cluster snapshot
      amazon.aws.rds_cluster_snapshot:
        db_cluster_identifier: "{{ cluster_name }}"
        db_cluster_snapshot_identifier: "{{ cluster_snapshot_name }}"
        region: "{{ region }}"


